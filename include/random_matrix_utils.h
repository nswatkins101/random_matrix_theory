/* header file for random_matrix_utils.c */

#include<gsl/gsl_vector.h>
#include<gsl/gsl_matrix.h>
#include<gsl/gsl_linalg.h>
#include<gsl/gsl_eigen.h>

void normalized_ER_RG(gsl_matrix* a_mat, double p);

void normalized_ER_RDG(gsl_matrix* a_mat, double p);

/* wraps generators and operators */
void gen_ER_RG(void** args);

void gen_ER_RDG(void** args);

void gen_normalized_ER_RG(void** args);

void gen_normalized_ER_RDG(void** args);

void gen_L_NL(void** args);

double op_kemeny(void** args);

int random_matrix_esd(FILE* stream, int len_esd, double* esd, int num_samples, void (*generator)(void**), void** args, int symm);

/* calculates the expectation of the output of operator by averaging over samples from
 * the matrix ensemble, with each member generated by generator. Only works for
 * symmetric matrices.
 */
double random_matrix_expectation(int samples, double (*operator)(void**), void** op_args, void (*generator)(void**), void** gen_args);

	
	

